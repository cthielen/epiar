Saturday, December 26, 2020
	Christopher Thielen:
		* Fixed an issue where log messages may not appear if created before
		  log level is fully set by options.xml or CLI.

Saturday, June 4, 2016
	Christopher Thielen:
		* Added HUD alert beeps.
		* Misc. text and formatting changes.
		* Added jump sound effects.

Sunday, April 10, 2016
	Christopher Thielen:
		* More work toward a jump-based navigation map

Wednesday, February 17, 2016
	Christopher Thielen:
		* Merged SDL2 port. SDL2, SDL2_image, SDL2_ttf seem to work
		well.

Sunday, January 3, 2016
	Christopher Thielen:
		* Main menu and non-textual UI now render correctly.
		* Restored some gameplay. Inverted Y-axis no longer appears to
		be the case.
		* Dropped FTGL and began SDL_ttf conversion.

Thursday, December 24, 2015
	Christopher Thielen:
		* Moved color functions out of video into separate class
		* Continued SDL2 migration

Wednesday, December 23, 2015
	Christopher Thielen:
		* Began SDL2 migration

Thursday, October 8, 2015
	Christopher Thielen:
		* Renamed 'simulation' to 'scenario'
		* Added sectors.xml and basic parsing. Not yet used.

Monday, September 28, 2015
	Christopher Thielen:
		* Unknown between 2012-2015 ...
		* Moved resources/ to data/

Sunday, April 29, 2012
	Christopher Thielen:
		* Added Window::Window(w, h, ...) for auto-centering new windows
		* Used new constructor above on all dialogs found in the main menu

Sunday, January 8, 2012
	Christopher Thielen:
		* Version 0.5.0 ChangeLog (press release):
		* UI clean-up
		* Expanded missions system
		* Sound and music additions
		* Main menu
		* Editor greatly expanded
		* Misc. bug fixes

Thursday, January 5, 2012
	Christopher Thielen:
		* Updated README. Releasing current source as 0.5.0.

Tuesday, May 3, 2011
	Christopher Thielen:
		* Re-enabled and now require PhysFS. Minor code tweaks and bug
		fixes to accomodate for this change.

Tuesday, April 26, 2011
	Christopher Thielen:
		* Factored out menu code from main.cpp into new menu.cpp
		* Added ability for SpriteManager to recognize the player's
		sprite specifically (for when they die, etc.)

Friday, January 29, 2010
	Matt Zweig:
		* Adds Camera Focus on Non-player Sprites.

Wednesday, January 27, 2010
	Matt Zweig:
		* Added a basic Targeter.  Just targets the closest ship or planet for now.

Tuesday, January 26, 2010
	Matt Zweig:
		* Adds Fadeout for Alerts.

Sunday, January 24, 2010
	Chris Thielen:
		* Implemented virtual timer. Timer code is still in flux and interpolation needs to be implemented.

Friday, December 25, 2009
	Chris Thielen:
		* Fixed Image::Resize()

Thursday, December 31, 2009
	Matt Zweig:
		* Created HUD StatusBars for displaying text and guages.

Tuesday, December 22, 2009
	Matt Zweig:
		* Adds Optional FreeType+FTGL support

Saturday, December 19, 2009
	Matt Zweig:
		* Adds Optional FreeType+FTGL support

Wednesday, December 9, 2009
	Matt Zweig:
		* Merged Weapons and QuadTree into the Epiar mainline.
		* Added projectile collisions.

Monday, December 7, 2009
	Matt Zweig:
		* Created a Animation tool.

Sunday, December 5, 2009
	Shawn Reynolds:
		* Created basic weapons, firing, and switching.

	Matt Zweig:
		* Added QuadTree culling to the Radar

Saturday, December 5, 2009
	Moss Jones:
		* Fixed Player actions while paused.

Mnday, November 30, 2009
	Matt Zweig:
		* Implemented a Quadtree for storing and retrieving Sprites based off
		of locality.
		* Prevents unnecessary drawing by culling Sprites using the QuadTree.

Sunday, November 22, 2009
	Matt Zweig:
		* Added Ship damage and removal.
		* Fixed window-child relative origin.
		* Created basic Shipyard.
		* Small optimizations to normalizeAngle, DrawTiled and XML-Get.

Sunday, November 21, 2009
	Matt Zweig:
		* Moved Lua code to Resources directory.
		* Split Lua functionality into seperate Scenarios.

Sunday, November 15, 2009
	Matt Zweig:
		* Added single-window close.
		* Fixed Lua pauseMessage() function.
		* Added function to fetch model names from Lua.
		* Added Lua Bridge for Planets.
		* Added function to fetch ship and planet lists from Lua.
		* Made Lua Planets and Ships Type-Safe.

	Maoserr:
		* Fixing cross-platform compilation warnings.
		* Fixed Logging on Windows.

Saturday, November 14, 2009
	Matt Zweig:
		* Added Lua functions to set ui_picture images based off of Ship
		models
		* Added Lua functions to change radar color.

Friday, November 13, 2009
	Shawn Reynolds:
		* Added screen shaking.

Tuesday, November 10, 2009
	Matt Zweig:
		* Added 17 old Epiar ship images and models.

Saturday, November 7, 2009
	Chris Thielen:
		* UI logic about mouse focus is much better
		* Buttons now visibly click
		* Began work on fixing window border transparency (mostly Photoshop work)

Wednesday, November 4, 2009
	Chris Thielen:
		* Plugged some memory leaks that moses7 mentioned in #epiar
		  and redesigned Image::ConvertToTexture() a bit to avoid them
		* Added a check to detect if we need GL_RGBA or GL_BGRA in Image::ConvertToTexture

Tuesday, November 3, 2009
	Chris Thielen:
		* Fixed 'brown planet' bug
		* Fixed animation loading bug

	Matt Zweig:
		* Cleaned up the TAG game so that it is more understandable.
		* The AI Plan model used here could be adapted for more complex scenes.

Monday, October 19, 2009
	Chris Thielen:
		* Updated OS X SDL files to v1.2.14 for OS X 10.6 support

Thursday, August 27, 2009
	Chris Thielen:
		* Added a BUILDING file to describe the build process on various architectures

Thursday, July 23, 2009
	Chris Thielen:
		* Began adding a framerate counter
		* Fixed bug with quadrant.cpp missing
		* Do we need a resource manager to pass around simulation,
		hud, etc. or is there another way to do this?

Tuesday, June 23, 2009
	Chris Thielen:
		* Obey options.xml for starfield density

Monday, February 23, 2009
	Chris Thielen:
		* Implemented 'echo' function for Lua console
		* Renamed SpriteList to SpriteManager

Sunday, February 22, 2009
	Chris Thielen:
		* More console & Lua work

Saturday, February 21, 2009
	Chris Thielen:
		* Fixed an issue with fonts not drawing correctly under Mac OS X
		* Beginnings of console work
		* Fixed GCC compiler identification

Wednesday, February 18, 2009
	Chris Thielen:
		* (Outside) Lua research for in-game bridge
		* Beginnings of HUD messaging system

Wednesday, February 4, 2009
	Chris Thielen:
		* Changed planet radar color to something more visible
		* Cleaned up compiler warnings under GCC 4.3

Monday, February 2, 2009
	Chris Thielen:
		* Received permission from Brian Kent to distribute his
		Visitor bitmap font (choosen by Niros, the designer of the UI
		and HUD) with Epiar. It is visitor1.ttf and visitor2.ttf, and
		the similarly named .af files.

Sunday, February 1, 2009
	Chris Thielen:
		* Fixed a bug with glScissor (it doesn't use our established
		ortho??)
		* Fixed UI dragging errors introduced by new coordinate system
		* Fixed a bug where Font renderings weren't showing up

Saturday, January 31, 2009
	Chris Thielen:
		* Upgraded to afont-0.9
		* Created Debug/graphics.cpp, Graphics/image2.cpp and
		--graphics-demo to work on replacement Image class
		* Graphics work, ensuring functions work, writing clean new
		Image class (currently called Image2)
		* Fixed a bug in DrawCircle where circle would be incomplete
		(needed to go a little more than once around for the verticies
		to fit together in OGL logic or something)
		* Fixed the image and coordinate issues but reverted back to
		  video buffer style coordinates and now all the math and
		  angles need to be re-examined...
		* Fixed the major math issues

Friday, January 30, 2009
	Chris Thielen:
		* Reverted back font changes as Jared has sent me afont-0.7 which should have OpenGL fixes we need (afont is faster than NeHe's freetype/OpenGL code as fonts are pre-rendered and saved)

Monday, January 19, 2009
	Chris Thielen:
		* Added the Bitstream Vera fonts package (v1.10) and included it's license under LICENSE.fonts
		* Removed afont from Font class and started using freetype2 directly using NeHe Tutorial #43 code (believed to be free)

Sunday, January 18, 2009
	Chris Thielen:
		* Fixed a bug in Image where images that weren't powers of two were being incorrectly scaled
		* Fixed a bug in Image::DrawAbsolute where texture sizes were used instead of the correct virtual sizes

Tuesday October 14, 2008
	Chris Thielen:
		* Added new INSTALL file from Leon Vayman
		* Fixed a bug/typo in configure.in, thanks Leon Vayman for the report/fix

Sunday October 12, 2008
	Chris Thielen:
		* Fixed an issue with the way we ensure powers of two: added tw,th (texture scaling coords) to Image
		  to account for this issue (when we expand the texture canvas, we need to set the scaling coords so
		  it looks as though we didn't do this)
		* Fixed a bug with Coordinate where it would enforce boundaries that hadn't been set
		* Continued UI work, getting mouse focus features down so clicking buttons work, then continue on
		  with additional widgets

	Matthew Zweig:
		* Changed scaling and coloring in the Hud Radar.  Ships are Red, Planets are Blue, else grey.

Monday Oct 7, 2008:
	Chris Thielen:
		* Began work on epiard. Need to research lock-free queues, brush up on multi-threaded programming and get basic multi-player flying around working nicely

Sunday May 11, 2008:
	Chris Thielen:
		* Enhanced Input class to allow event lists to support sub-input systems. UI now works alongside game simulation without pausing
		* Worked on UI - Implemented widget children. Started work on buttons, fixing window transparency issues

Friday April 25, 2008:
	Chris Thielen:
		* Implemented dragging of all widgets, the --ui-demo now lets you drag the window around

Tuesday April 22, 2008:
	Chris Thielen:
		* Implemented Image::ExpandCanvas(), which is called automatically for OpenGL surfaces that do not have
		  dimensional values that are powers of twos (required on a lot of OpenGL cards).
		* Implemented Image::DrawAbsoluteTiled, using a lot in GUI skinning. There's some oddities still when it tiles something
		  with a 1 pixel dimension
		* Updated UI::Window to the new GUI theme

Monday April 21, 2008:
	Chris Thielen:
		* Added Utilities/xml.h, Utilities/xml.cpp
		* Added Utilities/file.h, Utilities/file.cpp
		* Added Tests/ directory for later use
		* Removed Options class. Now we use an extern XMLFile optionsfile, with an access macro OPTION(T, "path"), e.g. OPTION(int, "options/video/fullscreen")

Wednesday January 9, 2008:
	Chris Thielen:
		* Added command line parsing, w/ --version, --help
		* Added --gui-demo to test the GUI as it progress
		* GUI work

Saturday January 5, 2008:
	Chris Thielen:
		* Reformatted code and renamed parts of the tree to be more logical (Video -> Graphics, System -> Utilities, ..)
		* Added Utilities/archive.cpp/.h for reading tar.gz archives (50% done)
		* Fixed some bugs with the radar. It's still a little screwy.

Sat, June 23, 2007
	Chris:
		* Added Enumerate() methods to SpriteList
		* More removal of Hungarian notation
		* Started moving build system to GNU autotools

Mon, May 28, 2007
	Chris:
		* Started work on HUD's radar

Sun, May 20, 2007
	Chris:
		* Fixed compilation errors due to source code rearrangement
		* Updated LUA to 5.1.2
		* Added AI/ directory and AI class

Fri, May 4, 2007
	Chris:
		* Changed more classes to static

Tue, April 17, 2007
	Chris:
		* Continued removing Hungarian notation

Wed, March 28, 2007
	Chris:
		* Started moving away from Hungarian notation (cVideo -> Video)
		* Started converting to some static classes

Sat, September 30, 2006
	Chris:
		* Added cAnimation and engine flare eye candy

Fri, September 29, 2006
	Chris:
		* Switched to a different HUD

Wed, September 6, 2006
	Chris:
		* Compile fixes and Makefile generated for Linux platform
		* Merged in OpenGL Afont code (credit to Jared)

Tue, July 25, 2006
	Chris:
		* sprite.h: Fixed compile warnings about virtual destructors
		* image.cpp: Fixed incorrect dimension resizing

(Copied from older releases)

Mon Feb 04 2002 0.08
	* intro.c - lessned time for title screen (8 secs to 4 secs)
	* cleaned up files a little (cleaner gcc output)
	* updated INSTALL and README
	* moved source code into src directory

Sun Feb 03 2002
	* game.c - added keys a and d as alternative left and right
	* menu.c - added keys w and s as alternative up and down
	* game.c - added mouse input for firing (button 0)

Thu Jan 31 2002
	* game.c       - Removed redundant surface declares
	* game.c       - Removed update variable (now that screen must always update)
	* background.c - implemented early animate_background() (slow) 
	* game.c       - first laser disappears if hit enemy, if not, keeps going
	* epiar.h      - changed NUM_LASER to 1 to test above change

Wed Jan 30 2002 0.08-pre1
	* game.c - implemented cheap, buggy formula for finding enemy x values
	* game.c - made enemy default 10
	* game.c - added laser detection w/ enemies (you can shoot them now)
	* game.c - made main game loop fall back to menu when all enemies gone
	* game.c - made enemies move back and forth (like space invaders)
	* menu.c - made the 'q' key the way to quit, not esc (would exit too fast if you held esc down from main game loop)

Mon Jan 28 2002 0.07
	* game.c  - added a simple laser (press f to fire)
	*           added another sprite (control w/ a & d) to later be enemy
	*           made laser button spacebar instead of the f key
	*           created structures for laser and enemies (#define for #s)
	* intro.c - added /images/intro.bmp picture w/ 8 second delay (intro)

Sat Jan 26 2002 0.06
	* background.c - draw_background() now supports specific areas (faster)
	* Rewrote code (again) and seperated it into small files
	* Made Makefile a little smarter

Sat Jan 19 2002 0.05
	* started fresh (easier than removing all merged example references)

Tue Jan 15 2002 0.04
	* Changed project name from sdl-anim-keys to epiar
	* Changed some internal variables from penguin to starship
	* Added movement boundaries so starship doesn't fly off screen
	* Merged SDL audio examples into game (press c to play cannon.wav)
		- NOTE: SDL audio code is temporary; OpenAL will be used later
	* Cleaned up directory structure (added images/ and sounds/)
	* Cleaned out dead code
	* Added window manager caption with SDL_WM_SetCaption();
	* Added two command line options, --fullscreen and --windowed

Mon Jan 14 2002 0.03
	* Changed video mode from 640x480 windowed to 640x480 fullscreen
	* Removed move_penguins()
	* Cleaned up build (removed unused variables)
	* Changed main loop from a case to a while
	* Changed bitmap from Tux to a cheap starship
	* Implemented different SDL functions for input (smoother)

Sun Jan 13 2002 0.02
	* Added initial frame so you don't have to input to see
	* Added functionality to allow Tux to move with w, a, s, d keys
	* Changed initial position of Tux to the bottom-center
	* Stopped using move_penguins()
	* Updated README

Sat Jan 12 2002 0.01
	* Initial posting
